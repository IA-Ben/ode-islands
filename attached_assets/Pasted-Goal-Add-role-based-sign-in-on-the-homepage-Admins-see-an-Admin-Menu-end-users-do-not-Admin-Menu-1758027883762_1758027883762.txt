Goal

Add role-based sign-in on the homepage. Admins see an Admin Menu; end users do not. Admin Menu links to: Theme Editor, CMS, Analytics, User Management.

Stack (adjust if different)

Frontend: React/Next.js

Auth & roles: (choose one) Supabase / Auth0 / Firebase Auth

Data: SQLite/Postgres via Prisma/Drizzle

Hosting: Replit

Requirements

Homepage sign-in

“Sign in / Sign out” in header.

After sign-in, show user avatar/name and role.

Role detection

Roles: admin, user.

Store role in DB (users.role) and in session/JWT claims.

Seed one admin via env (SEED_ADMIN_EMAIL).

Admin Menu

Visible only to admin.

Items: Theme Editor, CMS, Analytics, User Management.

Route paths:

/admin/theme

/admin/cms

/admin/analytics

/admin/users

Route protection

Server-side guards: 403 for non-admins on /admin/*.

Client-side: hide Admin Menu for non-admins (don’t rely on this alone).

Pages (stub OK)

/admin/theme: load/save theme.json (brand colours, fonts).

/admin/cms: CRUD for pages table (title, slug, body, status).

/admin/analytics: placeholder card(s) with dummy metrics.

/admin/users: list, search, change role (user ↔ admin), disable/reactivate.

Security

Enforce role checks server-side on every admin API.

Rate-limit auth endpoints.

CSRF protection for POST/PUT/DELETE (if using forms), or same-site cookies.

DX

.env variables for auth keys and SEED_ADMIN_EMAIL.

Seed script creates admin if email exists after first run.

Clear README with setup steps and test logins.

Acceptance Criteria (test checklist)

 Logged-out homepage shows Sign in.

 Normal users can sign in and do not see Admin Menu; /admin/* returns 403.

 Admin user sees Admin Menu and can open all four admin pages.

 Server rejects non-admin API calls to /api/admin/*.

 Changing a user’s role in User Management takes effect immediately on next request.

 Theme Editor saves and updates UI theme without restarting.

 README explains local setup, seeding, and how to promote another admin.

File/Code hints (Next.js example)

Middleware: middleware.ts to gate /admin/* by role.

Layout: components/AdminMenu.tsx rendered only when role==='admin'.

API routes: app/api/admin/* with server-side role check.

DB schema (Prisma/Drizzle): users(id, email, role, created_at, …), pages, themes.

Seed: scripts/seed-admin.ts reads SEED_ADMIN_EMAIL.

Nice-to-have (optional)

Toasts for save actions, skeleton loaders, basic analytics cards.

Audit log for admin actions.