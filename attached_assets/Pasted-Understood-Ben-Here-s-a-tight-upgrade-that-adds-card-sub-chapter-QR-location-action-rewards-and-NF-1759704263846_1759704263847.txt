Understood, Ben. Here’s a tight upgrade that adds card/sub-chapter/QR/location/action rewards and NFT-backed Memories—all CMS-controlled.

What changes

Where items come from: any Card, Sub-chapter, QR code, Location (geo-fence), or Action (e.g., win mini-game, complete AR scene, spend >£X, post a clip).

How you configure it: new “Add Memory” controls in the CMS on any card/sub-chapter, plus a Reward Rules panel for QR/location/action triggers.

What items can be: selfies at show locations, 3D characters (viewable in AR), stamps, order receipts, badges—each is an NFT (custodial by default; user can export later).

CMS — UI & data model (additions)
A) Card/Sub-chapter editor

Toggle: Adds Memory Item (on/off)

Template: select Memory Template (defines art, media type, metadata keys, rarity, points, NFT settings)

Trigger: On open | On complete | On share | On score ≥ N | On AR capture

Constraints: Cooldown (per user), One-time only, Requires tier ≥ Silver, Time window, Geo-fence (optional)

Success state: select Animation + Toast copy

Preview: simulate earn

B) Reward Rules (global)

Create rules not bound to a specific card:

Type: QR | Location | Action

Match:

QR: payload schema (e.g., ode:{eventId}:{stampId}:{nonce})

Location: geo-fence (lat/lng/radius), optional floor label/zone

Action: event name + conditions (e.g., minigame.win = true)

Outputs: Memory Template, Points, Tier gate, Rarity pool

Anti-abuse: per-user limit, per-device cooldown, duplicate nonce blocklist

Validity: start/end time, max redemptions

C) Memory Template (reusable)

Core: title, image, media.type(image|video|ar-capture|3d), media.asset(url|glb/usdz), points, rarity, set(id,index,total)

NFT: nft.enabled, chain(preset), contractRef, mintMode(lazy|instant), custodial(true/false), transferable(true/false), royaltyBps, claimExpiry

Metadata schema: key→type (e.g., zone:string, geo:geohash, score:number)

OG Share: title/desc/image presets

Privacy flags: requiresConsentForFaces (selfies)

Triggers (runtime)

From Cards/Sub-chapters: fire onComplete / onShare etc → evaluate constraints → award Memory.

QR codes: open camera → validate payload + nonce → award → fly-to-Wallet.

Location: enter geo-fence (optionally with dwell ≥ N sec) → award once.

Actions: event bus (e.g., minigame.win, ar.scene.finish, order.complete) routes to rule engine.

Anti-cheat: per-user rate limits, device fingerprint, server-side nonce, optional staff PIN for manual awards.

Wallet item (extended schema, backwards-compatible)
id, title, image, media{type,url,durationMs?},
type(stamp|clip|scene|order|badge|character3d),
earnedAt, source{cardId?,subchapterId?,eventId,ruleId?,sceneId?,qrId?,geo?},
points, rarity, set{id,name,index,total}?,
state(new|owned|preview),
metadata{zone?,score?,alt?,staff?,geohash?},
nft{enabled, chain, contract, tokenId?, mintStatus(pending|minted|failed),
     custodial(true|false), ownerWallet?, exportable(true|false), royaltyBps?},
privacy{shareable, containsFaces?, consentRef?},
shareUrl, og{title,description,image}

NFT flow (pragmatic MVP)

Default = custodial lazy mint. User earns off-chain; item shows as “Minting ready”.

One-tap “Mint”: signs a lightweight claim → backend mints to custodial wallet and updates tokenId.

“Export to my wallet”: connect wallet (later), or email link to claim.

Gas control: batch mints; optional L2 preset (configurable); queue if network down.

Compliance: clear T&Cs; age-gate where needed.

3D character Memories

Template media.type = 3d with glb/usdz URL.

AR view: launch viewer from Wallet detail; place character at venue or home.

Optional skin unlocks via tier or set completion.

Selfie Memories (location-based)

Templates with “selfie at zone X”:

On capture, attach geohash, timestamp, optional staff stamp.

Face-consent prompt; allow “private” (keeps NFT non-transferable until toggled).

QR & Location spec (concise)

QR payload: ode:{eventId}:{stampId}:{nonce}:{sig} (HMAC-signed).

Location: geohash-precision 7 (~150m) + optional BLE beacon for finer zones.

UX notes (additions)

Wallet badge increments instantly; tap shows Last earned drawer.

“How to earn” chip on locked items links to the originating card/sub-chapter or map pin.

NFT status pill on detail: Ready to mint → Minting… → Minted.

3D preview thumbnail (auto-spins), Open in AR button on detail.

Analytics (new events)

reward_rule_triggered {ruleId, type, ok|blocked_reason}

memory_awarded {templateId, sourceType, points}

nft_mint_start|success|fail {templateId, tokenId}

qr_scan_attempt|success / geofence_enter_award

share_selfie|share_character3d

Acceptance criteria (delta)

From any configured card/sub-chapter, completing the trigger awards a Memory and updates the Wallet within 1s.

QR, Location, and Action rules can be created in CMS and work without app updates.

Selfie and 3D character items display correctly; AR viewer opens and closes reliably.

NFT lazy-mint works end-to-end with custodial wallet; export flow is visible (even if stubbed).

Anti-abuse: duplicate QR nonce rejected; per-user cooldown respected.

Small build plan (MVP)

Add Memory Template + Reward Rules to CMS.

Implement rule engine (evaluate constraints → award).

Extend Wallet schema & UI with NFT state + 3D support.

Add QR validator + geo-fence service.

Ship with 5 demo templates:

Red Storm Stamp (QR)

Womb Room Selfie (Geo + selfie)

Tempest Character (3D + AR)

Merch Order Badge (Action = order.complete)

Act I Completion (Sub-chapter complete → Set bonus)

Want me to turn this into a CMS seed JSON + QR spec sheet you can hand to devs?